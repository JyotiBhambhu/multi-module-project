plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.jyoti.multimoduleproject"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    hilt {
        enableAggregatingTask = true
    }
}

dependencies {

    api project(':gtBase')
    implementation project(':feature1')
    implementation project(':feature2')
    implementation project(':gtCommon')
    implementation project(':gtCommonDesign')


    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // dagger
    api "com.google.dagger:hilt-android:$versions.daggerHiltAndroid"
    kapt "com.google.dagger:hilt-android-compiler:$versions.daggerHiltAndroid"
}

//task installGitHook(type: Copy) {
//    from new File(rootProject.rootDir, "scripts/pre-commit")
//    into { new File(rootProject.rootDir, '.git/hooks') }
//    fileMode 0775
//}

task myPrebuildTask() {
//    commandLine 'sh', 'pre-commit.sh'

    doLast {
        println("start executing shell command")
        exec {
//            workingDir "../scripts"
            commandLine 'sh', '../scripts/pre-commit.sh'
        }
    }
}

tasks.getByPath(':app:preBuild').dependsOn myPrebuildTask